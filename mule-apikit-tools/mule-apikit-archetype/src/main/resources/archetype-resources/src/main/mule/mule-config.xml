<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
      http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd
      http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd" >

    <configuration-properties file="mule-artifact.properties"/>

    <apikit:config name="router-config" raml="api.raml"
                   outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
#set ($isMuleEE = $minMuleVersion.toUpperCase().split("-").contains("EE"))

#set ( $useSharedHttpListener = !($sharedHttpListener.isEmpty() || $sharedHttpListener.equals("empty")))
#if( !$useSharedHttpListener )
#set( $configRefName = "httpListenerConfigDefault" )
    <http:listener-config name="httpListenerConfigDefault">
        <http:listener-connection host="0.0.0.0" port="${http.port}"/>
    </http:listener-config>
#else
#set( $configRefName = $sharedHttpListener )
#end

    <flow name="main-api">
        <http:listener config-ref="$configRefName" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>

        <apikit:router config-ref="router-config" />

        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
#if($isMuleEE)
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
#else
                <set-variable variableName="outboundHeaders" value="#[{Content-Type:'application/json'}]"/>
                <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }"/>
                <set-variable variableName="httpStatus" value="400"/>
#end
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
#if($isMuleEE)
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
#else
                <set-variable variableName="outboundHeaders" value="#[{Content-Type:'application/json'}]"/>
                <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }"/>
                <set-variable variableName="httpStatus" value="404"/>
#end
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
#if($isMuleEE)
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]>
                        </ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
#else
                <set-variable variableName="outboundHeaders" value="#[{Content-Type:'application/json'}]"/>
                <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }"/>
                <set-variable variableName="httpStatus" value="405"/>
#end
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
#if($isMuleEE)
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
#else
                <set-variable variableName="outboundHeaders" value="#[{Content-Type:'application/json'}]"/>
                <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }"/>
                <set-variable variableName="httpStatus" value="406"/>
#end
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
#if($isMuleEE)
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
#else
                <set-variable variableName="outboundHeaders" value="#[{Content-Type:'application/json'}]"/>
                <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }"/>
                <set-variable variableName="httpStatus" value="415"/>
#end
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
#if($isMuleEE)
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
#else
                <set-variable variableName="outboundHeaders" value="#[{Content-Type:'application/json'}]"/>
                <set-payload value="{ &quot;message&quot;: &quot;Not implemented&quot; }"/>
                <set-variable variableName="httpStatus" value="501"/>
#end
            </on-error-propagate>
        </error-handler>
    </flow>

    <flow name="main-console">
        <http:listener config-ref="$configRefName" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>

        <apikit:console config-ref="router-config" />

        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
#if($isMuleEE)
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]>
                        </ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
#else
                <set-variable variableName="outboundHeaders" value="#[{Content-Type:'application/json'}]"/>
                <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }"/>
                <set-variable variableName="httpStatus" value="404"/>
#end
            </on-error-propagate>
        </error-handler>
    </flow>

</mule>