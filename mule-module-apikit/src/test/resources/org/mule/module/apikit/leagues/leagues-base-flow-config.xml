<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
        http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
        http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <apikit:mapping-exception-strategy name="Global_Mapping_Exception_Strategy">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException"/>
            <set-payload value="resource not found"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException"/>
            <set-payload value="method not allowed"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException"/>
            <set-payload value="unsupported media type"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException"/>
            <set-payload value="not acceptable"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException"/>
            <set-payload value="bad request"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>

    <flow name="get:/leagues">
        <set-payload value="#[registry:list-of-leagues]"/>
        <flow-ref name="non-blocking-checker"/>
    </flow>

    <flow name="get:/leagues.json">
        <set-payload value="{&quot;leagues&quot;: [{&quot;id&quot;: &quot;liga-bbva&quot;,&quot;name&quot;: &quot;Liga BBVA&quot;},{&quot;id&quot;: &quot;premier-league&quot;,&quot;name&quot;: &quot;Premier League&quot;}]}"/>
    </flow>

    <flow name="get:/leagues.xml">
        <set-payload value="&lt;leagues&gt;&lt;league&gt;&lt;ns2:id xmlns:ns2=&quot;http://mulesoft.com/schemas/soccer&quot;&gt;liga-bbva&lt;/ns2:id&gt;&lt;ns2:name xmlns:ns2=&quot;http://mulesoft.com/schemas/soccer&quot;&gt;Liga BBVA&lt;/ns2:name&gt;&lt;/league&gt;&lt;league&gt;&lt;ns2:id xmlns:ns2=&quot;http://mulesoft.com/schemas/soccer&quot;&gt;premier-league&lt;/ns2:id&gt;&lt;ns2:name xmlns:ns2=&quot;http://mulesoft.com/schemas/soccer&quot;&gt;Premier League&lt;/ns2:name&gt;&lt;/league&gt;&lt;/leagues&gt;"/>
    </flow>

    <flow name="post:/leagues">
        <custom-transformer class="org.mule.module.apikit.transform.PayloadNormalizerTransformer"
                            returnClass="org.mule.module.apikit.leagues.League"/>
        <choice>
            <when expression="#[!payload.name.matches('[\\w ]+')]">
                <set-property propertyName="http.status" value="400"/>
                <set-payload value="Invalid League Name"/>
            </when>
            <otherwise>
                <set-property propertyName="Location"
                              value="http://localhost:${serverPort}/api/leagues/#[app.registry['list-of-leagues'].getLeagues().size() + 1]"/>
                <expression-component>
                    payload.id = message.inboundProperties.get('Location');
                    app.registry['list-of-leagues'].getLeagues().add(payload);
                </expression-component>
                <set-payload value="#[payload.description]" mimeType="text/plain" encoding="windows-1252"/>
            </otherwise>
        </choice>
        <flow-ref name="non-blocking-checker"/>

    </flow>

    <flow name="get:/leagues/{leagueId}">
        <logger level="WARN" message="leagueId: #[leagueId]"/>
        <choice>
            <when expression="#[app.registry['list-of-leagues'].getLeague(leagueId)]">
                <set-payload value="#[app.registry['list-of-leagues'].getLeague(leagueId)]"/>
            </when>
            <otherwise>
                <set-property propertyName="http.status" value="404"/>
            </otherwise>
        </choice>
        <flow-ref name="non-blocking-checker"/>
    </flow>

    <flow name="put:/leagues/{leagueId}">
        <custom-transformer class="org.mule.module.apikit.transform.PayloadNormalizerTransformer"
                            returnClass="org.mule.module.apikit.leagues.League"/>
        <choice>
            <when expression="#[!payload.name.matches('[\\w ]+')]">
                <logger level="WARN" message="invalid name returning 400"/>
                <set-property propertyName="http.status" value="400"/>
                <set-payload value=""/>
            </when>
            <otherwise>
                <expression-component>
                    league = app.registry['list-of-leagues'].getLeague(leagueId);
                    league.name = payload.name;
                </expression-component>
                <set-payload value="#[org.mule.transport.NullPayload.getInstance()]"/>
            </otherwise>
        </choice>
        <flow-ref name="non-blocking-checker"/>
    </flow>

    <flow name="delete:/leagues/{leagueId}">
        <expression-component>
            app.registry['list-of-leagues'].deleteLeague(leagueId)
        </expression-component>
        <flow-ref name="non-blocking-checker"/>
    </flow>

    <flow name="get:/leagues/{leagueId}/teams">
        <expression-component>
            teams = app.registry['list-of-leagues'].getLeague(leagueId).getTeams();
            int from = Integer.valueOf(message.inboundProperties['http.query.params']['offset']);
            to = Math.min(Integer.valueOf(message.inboundProperties['http.query.params']['limit']), teams.size());
            payload = teams.subList(from, to);
        </expression-component>
        <set-property propertyName="preferred-team" value="#[message.inboundProperties.preferred]"/>
        <flow-ref name="non-blocking-checker"/>
    </flow>

    <flow name="put:/leagues/{leagueId}/badge">
        <set-variable variableName="mp1"
                      value="#[org.mule.util.IOUtils.toString(message.inboundAttachments['description'].getDataSource().getInputStream())]"/>
        <set-variable variableName="mp2"
                      value="#[message.inboundAttachments['image'].getDataSource().getPart().getContentDispositionFilename()]"/>
        <set-property propertyName="Content-Type" value="application/json"/>
        <set-payload value="{ &quot;upload&quot;: &quot;OK&quot; }"/>
        <flow-ref name="non-blocking-checker"/>
    </flow>

    <flow name="get:/leagues/{leagueId}/badge">
        <set-property propertyName="Content-Type" value="application/json"/>
        <set-payload value="{ &quot;name&quot;: &quot;Liga BBVA&quot; }"/>
        <flow-ref name="non-blocking-checker"/>
    </flow>

    <flow name="get:/leagues/{leagueId}/teams/leader">
        <set-property propertyName="Content-Type" value="application/json"/>
        <set-payload value="{ &quot;name&quot;: &quot;Aleti&quot; }"/>
        <flow-ref name="non-blocking-checker"/>
    </flow>

    <flow name="get:/leagues/version/v1">
        <set-property propertyName="Content-Type" value="application/json"/>
        <set-payload value="{ &quot;version&quot;: &quot;v1&quot; }"/>
        <flow-ref name="non-blocking-checker"/>
    </flow>

    <flow name="get:/leagues/version/v1/child">
        <set-property propertyName="Content-Type" value="application/json"/>
        <set-payload value="{ &quot;version&quot;: &quot;v1-child&quot; }"/>
        <flow-ref name="non-blocking-checker"/>
    </flow>

    <flow name="non-blocking-checker">
        <scripting:component>
            <scripting:script engine="Groovy"><![CDATA[message.setOutboundProperty('non-blocking',eventContext.event.isAllowNonBlocking());return message;]]></scripting:script>
        </scripting:component>
    </flow>

    <spring:beans>
        <spring:bean id="liga-bbva" class="org.mule.module.apikit.leagues.League">
            <spring:property name="id" value="liga-bbva"/>
            <spring:property name="name" value="Liga BBVA"/>
            <spring:property name="federation" ref="spanish-federation"/>
            <spring:property name="teams">
                <spring:list>
                    <spring:ref bean="real-madrid"/>
                    <spring:ref bean="barcelona"/>
                    <spring:ref bean="valencia"/>
                    <spring:ref bean="athletic-bilbao"/>
                    <spring:ref bean="atletico-madrid"/>
                </spring:list>
            </spring:property>
        </spring:bean>
        <spring:bean id="spanish-federation" class="org.mule.module.apikit.leagues.Federation">
            <spring:property name="name" value="Real Federacion Espanola de Futbol"/>
            <spring:property name="year" value="1909"/>
        </spring:bean>
        <spring:bean id="premier-league" class="org.mule.module.apikit.leagues.League">
            <spring:property name="id" value="premier-league"/>
            <spring:property name="name" value="Premier League"/>
            <spring:property name="federation" ref="english-federation"/>
            <spring:property name="teams">
                <spring:list>
                    <spring:ref bean="man-united"/>
                    <spring:ref bean="man-city"/>
                </spring:list>
            </spring:property>
        </spring:bean>
        <spring:bean id="league-one" class="org.mule.module.apikit.leagues.League">
            <spring:property name="id" value="league+one"/>
            <spring:property name="name" value="League One"/>
        </spring:bean>
        <spring:bean id="english-federation" class="org.mule.module.apikit.leagues.Federation">
            <spring:property name="name" value="Football Association"/>
            <spring:property name="year" value="1863"/>
        </spring:bean>
        <spring:bean id="list-of-leagues" class="org.mule.module.apikit.leagues.Leagues">
            <spring:property name="leagues">
                <spring:list>
                    <spring:ref bean="liga-bbva"/>
                    <spring:ref bean="premier-league"/>
                    <spring:ref bean="league-one"/>
                </spring:list>
            </spring:property>
        </spring:bean>
        <spring:bean id="real-madrid" class="org.mule.module.apikit.leagues.Team">
            <spring:property name="id" value="real-madrid"/>
            <spring:property name="name" value="Real Madrid"/>
        </spring:bean>
        <spring:bean id="barcelona" class="org.mule.module.apikit.leagues.Team">
            <spring:property name="id" value="barcelona"/>
            <spring:property name="name" value="Barcelona"/>
        </spring:bean>
        <spring:bean id="valencia" class="org.mule.module.apikit.leagues.Team">
            <spring:property name="id" value="valencia"/>
            <spring:property name="name" value="Valencia"/>
        </spring:bean>
        <spring:bean id="athletic-bilbao" class="org.mule.module.apikit.leagues.Team">
            <spring:property name="id" value="athletic-bilbao"/>
            <spring:property name="name" value="Athletic Bilbao"/>
        </spring:bean>
        <spring:bean id="atletico-madrid" class="org.mule.module.apikit.leagues.Team">
            <spring:property name="id" value="atletico-madrid"/>
            <spring:property name="name" value="Atletico Madrid"/>
        </spring:bean>
        <spring:bean id="man-united" class="org.mule.module.apikit.leagues.Team">
            <spring:property name="id" value="man-united"/>
            <spring:property name="name" value="Manchester United"/>
        </spring:bean>
        <spring:bean id="man-city" class="org.mule.module.apikit.leagues.Team">
            <spring:property name="id" value="man-city"/>
            <spring:property name="name" value="Manchester City"/>
        </spring:bean>
    </spring:beans>

</mule>
