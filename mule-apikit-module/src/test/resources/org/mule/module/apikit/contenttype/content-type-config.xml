<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
      http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd
      http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

    <http:listener-config name="httpListenerConfigDefault">
        <http:listener-connection host="localhost" port="${serverPort}"/>
    </http:listener-config>

    <apikit:config name="apikitConfig" raml="org/mule/module/apikit/contenttype/content-type.yaml"
                   outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus"/>

    <flow name="doorway">
        <http:listener config-ref="httpListenerConfigDefault" path="/api/*">
            <http:response statusCode="#[vars.httpStatus]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="apikitConfig"/>

        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <set-variable variableName="outboundHeaders" value="#[{'Content-Type':'application/json'}]"/>
                <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }"/>
                <set-variable variableName="httpStatus" value="400"/>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <set-variable variableName="outboundHeaders" value="#[{'Content-Type':'application/json'}]"/>
                <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }"/>
                <set-variable variableName="httpStatus" value="404"/>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <set-variable variableName="outboundHeaders" value="#[{'Content-Type':'application/json'}]"/>
                <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }"/>
                <set-variable variableName="httpStatus" value="405"/>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <set-variable variableName="outboundHeaders" value="#[{'Content-Type':'application/json'}]"/>
                <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }"/>
                <set-variable variableName="httpStatus" value="406"/>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <set-variable variableName="outboundHeaders" value="#[{'Content-Type':'application/json'}]"/>
                <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }"/>
                <set-variable variableName="httpStatus" value="415"/>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <set-variable variableName="outboundHeaders" value="#[{'Content-Type':'application/json'}]"/>
                <set-payload value="{ &quot;message&quot;: &quot;Not implemented&quot; }"/>
                <set-variable variableName="httpStatus" value="501"/>
            </on-error-propagate>
        </error-handler>
    </flow>

    <flow name="get:\resources">
        <logger level="INFO" message="siamo qui"/>
        <set-payload value="#[mel:null]"/>
    </flow>

    <flow name="get:\multitype">
        <logger level="INFO" message="content type hint: #[mel:message.getAttributes().getHeaders()['ctype']]"/>
        <choice>
            <when expression="#[mel:message.getAttributes().getHeaders()['ctype'] == 'json']">
                <logger level="INFO" message="returning json"/>
                <set-variable variableName="outboundHeaders" value="#[{'Content-Type':'application/json'}]"/>
            </when>
            <when expression="#[mel:message.getAttributes().getHeaders()['ctype'] == 'xml']">
                <logger level="INFO" message="returning xml"/>
                <set-variable variableName="outboundHeaders" value="#[{'Content-Type':'application/xml'}]"/>
            </when>
            <otherwise>
                <logger level="INFO" message="returning html"/>
                <set-variable variableName="outboundHeaders" value="#[{'Content-Type':'text/html'}]"/>
            </otherwise>
        </choice>
        <set-payload value="#[mel:null]"/>
        <set-payload value="never mind"/>
    </flow>

    <flow name="get:\multistatus">
        <choice>
            <when expression="#[mel:message.getAttributes().getHeaders()['ctype'] == 'zip']">
                <set-variable variableName="httpStatus" value="200"/>
                <logger level="INFO" message="returning zip with 200 Ok"/>
                <set-variable variableName="outboundHeaders" value="#[vars.outboundHeaders ++ {'Content-Type':'application/zip'}]"/>
                <set-payload value="#[org.mule.transport.NullPayload.getInstance()]"/>
            </when>
            <otherwise>
                <set-variable variableName="httpStatus" value="202"/>
                <set-variable variableName="outboundHeaders" value="#[vars.outboundHeaders ++ {'Content-Type':'application/json'}]"/>
                <logger level="INFO" message="returning json with 202 Accepted"/>
                <set-payload value="{ &quot;message&quot;: &quot;Data request accepted.&quot; }"/>
            </otherwise>
        </choice>
    </flow>

</mule>
